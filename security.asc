== Security

* Tiller authentication model uses client-side SSL certificates
* Tiller itself verifies these certificates using a certificate authority
* Client also verifies Tillerâ€™s identity by certificate authority

WARNING: Tiller requires that the client certificate be validated by its CA

=== Generate a Certificate Authority

This will generate both secret key and CA

[source, sh, subs="attributes,quotes,verbatim"]
----
% openssl genrsa -out ./ca.key.pem 4096
% openssl req -key ca.key.pem -new -x509 -days 7300 -sha256 -out ca.cert.pem -extensions v3_ca
----

=== Generating the Certificate for Tiller

* Generate certificate is for Tiller
* You will want one of these per tiller host that you run

[source, sh, subs="attributes,quotes,verbatim"]
----
% openssl genrsa -out ./tiller.key.pem 4096
----

=== Generating the Certificate for each Client

For each client that you wish to run

[source, sh, subs="attributes,quotes,verbatim"]
----
% openssl genrsa -out ./helm.key.pem 4096
----

=== Create Certificates Requests

[source, sh, subs="attributes,quotes,verbatim"]
----
% openssl req -key tiller.key.pem -new -sha256 -out tiller.csr.pem
% openssl req -key helm.key.pem -new -sha256 -out helm.csr.pem
----

=== Self Sign Each of the Certificates

[source, sh, subs="attributes,quotes,verbatim"]
----
% openssl x509 -req -CA ca.cert.pem -CAkey ca.key.pem -CAcreateserial -in tiller.csr.pem -out tiller.cert.pem -days 365
% openssl x509 -req -CA ca.cert.pem -CAkey ca.key.pem -CAcreateserial -in helm.csr.pem -out helm.cert.pem  -days 365
----


=== Taking stock of the files

[source, subs="attributes,quotes,verbatim"]
----
# The CA. Make sure the key is kept secret.
ca.cert.pem
ca.key.pem
# The Helm client files
helm.cert.pem
helm.key.pem
# The Tiller server files.
tiller.cert.pem
tiller.key.pem
----

=== Installing TLS on Tiller

[source, sh, subs="attributes,quotes,verbatim"]
----
% helm init --dry-run --debug --tiller-tls --tiller-tls-cert ./tiller.cert.pem --tiller-tls-key ./tiller.key.pem --tiller-tls-verify --tls-ca-cert ca.cert.pem
----

=== Installing TLS on Client

Manually running the TLS certs

[source, sh, subs="attributes,quotes,verbatim"]
----
% helm ls --tls --tls-ca-cert ca.cert.pem --tls-cert helm.cert.pem --tls-key helm.key.pem
----

Adding the certificates to the client in the helm home

[source, sh, subs="attributes,quotes,verbatim"]
----
% cp ca.cert.pem $(helm home)/ca.pem
% cp helm.cert.pem $(helm home)/cert.pem
% cp helm.key.pem $(helm home)/key.pem
----

Then run `helm ls --tls`
