== Lab 7: Testing

A chart contains a number of Kubernetes resources and components that work together.
As a chart author, you may want to write some tests that validate that your chart 
works as expected when it is installed. These tests also help the chart
consumer understand what your chart is supposed to do.

### Unit Testing

*Step 1:* Download the unittest plugin

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm plugin install https://github.com/quintush/helm-unittest
----

*Step 2:* Create a _tests_ folder in the _goweb-app_ folder.

*Step 3:* Create a test file that will test the _deployment_test.yaml_

*Step 4:* Test that the kind of document produced is a `deployment`

*Step 5:* Test that the `spec`, `template`, and spec's first container name is what you are expecting

*Step 6:* Test that the spec, template, spec's first container image is the right one you are expecting

*Step 7:* Test that the spec, template, spec's first container image's ports never change

NOTE: Visit https://github.com/lrills/helm-unittest for some ideas on how to get this working

*Step 8:* Run your unittest suite to ensure that it works

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm unittest -3 ./goweb-app
----

### Integration Testing

A test in a helm chart lives under the _templates/_ directory and is a 
job definition that specifies a container with a given command to run.

The container should exit successfully (exit 0) for a test to be considered a success. 
The job definition must contain the helm test hook `annotation: helm.sh/hook: test.`

*Step 1:* Create a file _goweb-app/templates/tests/connection-test.yaml_ with the following content:

[source, yaml, subs="attributes,quotes,verbatim"]
----
apiVersion: v1
kind: Pod
metadata:
  name: "goweb-app-test-connection"
  labels:
    app.kubernetes.io/name: goweb-app
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: wget
    image: busybox
    command: ['wget']
    args:  ['-qO-', 'http://{{.Release.Name}}-{{.Chart.Name}}:8080/health']
  restartPolicy: Never
----

*Step 2:* Upgrade your project, then run your tests

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm upgrade <release-name> ./goweb-app
$ helm test <release-name>
----

image::stop.png[width="20%, height="20%", align="center"]
