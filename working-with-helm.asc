= Working with Helm
DevelopIntelligence
:source-highlighter: pygments
:pygments-style: friendly
:icons: font
:imagesdir: ./images
:project-name: advanced_java
:star: *
:starline: *_
:starstar: **
:underscore: _
:toc: left
:backend: revealjs
:customcss: custom.css
:topic: state=title
:icons: font
:lt: <
:gt: >
:revealjs_hash: true

//TODO:
//Put Indenting and Templates in Best Practices

[%notitle]
== Welcome

image::checkin.png[]

== Virtual Training

image::whatwewant.png[]

=== Virtual Training Expectations For Me

I pledge to:

* Make this as interesting and interactive as possible
* Ask questions in order to stimulate discussion
* Use whatever resources I have at hand to explain the material
* Try my best to manage verbal responses so that everyone who wants to speak can do so
* Use an on-screen timer for breaks so you know when to be back

=== Virtual Training Expectations For You

* Arrive and Return on Time
* Mute unless speaking
* Use chat or ask questions verbally

include::about_di.asc[]

== Course Overview

* The Helm Fundamentals course is designed to be an introduction to understanding and working with the Helm Kubernetes package manager. 
* It will start with a journey to understand why Helm exists and its purpose.
* The course will then navigate a path towards how to work with it, including
** Building charts
** Publishing charts
** Using them to release and manage Kubernetes workloads
** Various capabilities Helm offers via its CLI

== Audience

Developers, Service Owners, Ops

== Purpose

To gain a comprehensive understanding of Helm and how to use it to package and manage Kubernetes workloads

== Prerequisites for the Class

* Knowledge and working experience with Kubernetes. This includes understanding common resources and usage of things like Deployments, Config Maps, Secrets, Pods, Container Spec, etc.
* Some level of comfort with the command line (kubectl, piping output, navigating folders, etc)

== Objectives

* Understand the purpose of Helm, why it exists
* Create Helm charts of your own ready for distribution
* Test helm in local, and how to validate your changes
* Understand all features and practices around Helm chart source code
* Feel comfortable with best practices around using Helm as well as gotchas of Helm

=== Objectives Continued

* Know how Helm charts are commonly distributed and stored, and work with Helm chart repos
* Understand the architecture of Helm, where it is today, and where itâ€™s headed
* Install the Helm CLI, initialize the client and server

=== Objectives Continued

* Use the various features of the CLI including packaging charts, installing and using plugins, installing and upgrading charts.
* Have awareness of development and testing strategies around Helm charts, and be able to use these strategies
* How to use Helm securely

include::intro.asc[]

include::architecture.asc[]

include::installing.asc[]

include::kubernetes_primer.asc[]

include::install_chart.asc[]

== Lab 1: Install Chart

Open your lab book, _lab_book.html_, and do "Lab 1: Install a public chart"

include::yaml_primer.asc[]

include::create_basic_chart.asc[]

== Lab 2: Create a Basic Chart

Open your lab book, _lab_book.html_, and do "Lab 2: Create a basic chart"

include::dependencies.asc[]

== Lab 3: Dependencies

Open your lab book, _lab_book.html_, and do "Lab 3: Dependencies"

include::templates.asc[]

== Lab 4: Templatizing

Open your lab book, _lab_book.html_, and do "Lab 4: Templatizing"

include::functions.asc[]

== Lab 5: Functions

Open your lab book, _lab_book.html_, and do "Lab 5: Functions"

include::subcharts.asc[]

== Lab 6: Subcharts

Open your lab book, _lab_book.html_, and do "Lab 6: Subcharts"

include::plugins.asc[]

include::testing.asc[]

== Lab 7: Testing

Open your lab book, _lab_book.html_, and do "Lab 7: Testing"

include::commands.asc[]

== Lab 8: Deploy

Open your lab book, _lab_book.html_, and do "Lab 8: Deploying"

include::helm_v3.asc[]

== Where to get more information

https://helm.sh/blog/2019-10-22-helm-2150-released
