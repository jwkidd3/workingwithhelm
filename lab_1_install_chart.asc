== Lab 1: Install a Public Chart 

*Step 1:* Start Docker Desktop

a. Select the docker icon on your desktop
b. Select *Preferences*
c. Go to *Kubernetes* on the left hand menu
d. Select *Enable Kubernetes*

image::docker_menu.png[Docker Menu,width=30%,height=30%]
image::docker_kubernetes_menu.png[Kubernetes Menu,width=80%,height=80%]

NOTE: This may take up to a minute or two, you can still proceed with the rest of the lab, eventhough it will say "Starting..."

*Step 2:* Configure Kubernetes to use Docker-Desktop

[source, sh, subs="attributes,quotes,verbatim"]
----
% kubectl config use-context docker-desktop
----

*Step 3:* Turn on auto-completion on your system for your favorite shell

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm completion bash
----

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm completion zsh
----

NOTE: Use `echo $SHELL` in your terminal if you do not know which shell you are using.

*Step 4:* Add the `stable` repository

This repository is a common repository with many useful charts, the name `stable` is for our benefit and is convention.

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm repo add stable https://charts.helm.sh/stable
----

*Step 5:* Search for an `mysql` chart using either the CLI or Helm Hub

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm search repo mysql
----

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm search hub mysql
----

NOTE: You can do a hub search at https://artifacthub.io/[artifacthub.io^]

*Step 6:* Know about the details about the chart you are about to install with:

* `helm show readme stable/mysql` - this comes from a file called _NOTES.txt_ in the Chart which are instructions for you
* `helm show values stable/mysql` - these are values which you can override
* `helm show chart stable/mysql` - high-level information about the chart you are about to install
* `helm show all stable/mysql` - show all `readme`, `values`, `chart` information

*Step 7:* Install `stable/mysql` using either of the following

a.
[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm install stable/mysql --generate-name
----

b.
[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm install stable/mysql <release-name>
----

NOTE: If you are looking for a fun and clever release-name, go to http://creativityforyou.com/combomaker.html[Creativity for You^]


*Step 8:* Use Helm Commands: `list`, `status`, `get` for deployed applications

* `helm list` or `helm ls` - Shows applications that have been deployed
* `helm status <release-name>` - Shows the status of the release
* `helm get <selection> <release-name>` - Shows aspects of what has been deployed, there are multiple choices for `<selection>`, try each one:
** `all` - all of the following
** `values` - values that you can override when you deploy
** `notes` - instructions
** `manifest` - yaml files that were deployed
** `hooks` - pods that react to lifecycles of a Helm deployment

An example, to get the notes of the deployment: `helm get notes mysql-1610746419` if the release-name is `mysql-1610746419`

*Step 9:* Use `kubectl` to view deployments

* `kubectl get svc --all-namespaces`
* `kubectl get deploy --all-namespaces`
* `kubectl get pvc --all-namespaces`
* `kubectl get pods --all-namespaces`

* If you're interested, K9S is a wonderful command line utility. You can find that at https://github.com/derailed/k9s[K9S^]


*Step 10:* Install the same chart but with a different name, can you do it? What differences do you see? Run the same commands like `helm ls`, `helm get`, etc to find out.

*Step 11:* Uninstall both `mysql` releases from helm when done

[source, sh, subs="attributes,quotes,verbatim"]
----
% helm uninstall <release-name>
----

*Step 12:* Ensure that both deployments longer deployed

*Step 13:* Be sure to be able to answer the question, what is the difference between `show` and `get`?

image::stop.png[width="20%", height="20%", align="center"]
