== Lab 4: Templatizing

*Step 1:* In the _hello-world_ custom chart that you created previously, got to _values.yaml_ in the chart directory add the following content

[source, yaml, subs="attributes,quotes,verbatim"]
----
replicaCount: 1
image:
  repository: "hashicorp/http-echo"
  tag: "latest"
  args: "-text=hello-world"
  pullPolicy: IfNotPresent
service:
  type: NodePort
  port: 80
----

*Step 2:* Now go to the _templates_ directory

*Step 3:* In _deployment.yaml_, templatize it so that it looks like the following where 

* The name of the release is `tame-impala`
* The name of the release service is `Helm`

[source, yaml, subs="attributes,quotes,verbatim"]
----
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tame-impala-hello-world
  labels:
    app.kubernetes.io/name: hello-world
    helm.sh/chart: hello-world-0.1.0
    app.kubernetes.io/instance: tame-impala
    app.kubernetes.io/managed-by: Helm

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-world
      app.kubernetes.io/instance: tame-impala
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-world
        app.kubernetes.io/instance: tame-impala
    spec:
      containers:
        - name: hello-world
          image: "hashicorp/http-echo:latest"
          imagePullPolicy: IfNotPresent
          args:
            - "-text=hello-world"
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
----

*Step 4:* In _service.yaml_, templatize so that it looks like the following content given that the release name is `tame-impala`

[source, yaml, subs="attributes,quotes,verbatim"]
----
apiVersion: v1
kind: Service
metadata:
  name: tame-impala-hello-world
  labels:
    app.kubernetes.io/name: hello-world
    helm.sh/chart: hello-world-0.1.0
    app.kubernetes.io/instance: tame-impala
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hello-world
    app.kubernetes.io/instance: tame-impala
----

*Step 5:* Templatize the _ingress.yaml_ file in _templates_ given the knowledge you have now.

*Step 6:* Ensure you are in the directory before _hello_world_

*Step 7:* Run `helm lint ./hello-world`

*Step 8:* Run `helm install --dry-run --debug ./hello-world`

*Step 9:* Run `helm install tame-impala ./hello-world`

*Step 10:* Perform multiple installs under different names

*Step 11:* Keep the applications running

image::stop.png[width="20%, height="20%", align="center"]
