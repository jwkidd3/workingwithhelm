== Lab 6: Subcharts

*Step 1:* In your terminal go into the _charts_ directory in _goweb-app_

*Step 2:* Create a chart like you have done in the past in that directory

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm create subchart-app
----

*Step 3:* Remove most of the content in the _subchart-app_ with the exception of the _Chart.yaml_, _values.yaml_.

[source, sh, subs="attributes,quotes,verbatim"]
----
$ cd goweb-app/charts/subchart-app
$ rm -rf templates/deployment.yaml
$ rm -rf templates/service.yaml
$ rm -rf templates/hpa.yaml
$ rm -rf templates/tests
$ rm -rf templates/ingress.yaml
$ rm -rf templates/serviceaccount.yaml
----

*Step 4:* Create a config map file in _goweb-app/charts/subchart-app/templates_ directory called _config-map.yaml_

*Step 5:* In _subchart-app/templates/config-map.yaml_, add the following content

[source, yaml, subs="attributes,quotes,verbatim"]
----
apiVersion: v1
kind: ConfigMap
metadata:
  name: name-config
  namespace: default
data:
  message: {{ .Values.greeting }}
----

*Step 6:* In the _values.yaml_ of the *outer project* _goweb-app_, add a custom `greeting`

[source, yaml, subs="attributes,quotes,verbatim"]
----
subchart-app:
  greeting: "Hi, There"
----

*Step 7:* Run `helm upgrade` with the same release name

*Step 8:* Run `kubectl get configmap name-config` and ensure that the value from the outer project is in the config map

*Step 9:* Answer the question, why did this work? What are configmaps for?

image::stop.png[width="20%, height="20%", align="center"]
