== Lab 3: Dependencies

We saw in the previous Lab, as our UI was not accessible or up as it has a dependency on MySQL which was not installed. 
In this lab we will be resolving all the dependencies required.

Deploy an application which is the combination of 1 Microservice, 1 Database(MySQL) and 1 Caching Engine(Redis)
goweb-app will be dependent on MySQL and Redis Helm chart for the installation of these dependencies

*Step 1:* Update the _goweb-app/Chart.yaml_ file to includes the dependencies

[source, yaml, subs="attributes,quotes,verbatim"]
----
apiVersion: v2
name: goweb-app
description: A Helm chart for goweb-app
type: application
version: 0.1.0
appVersion: 1.16.0
dependencies:
- name: mysql
  version: "1.6.9"
  repository: "https://charts.helm.sh/stable"
- name: redis
  version: "10.5.7"
  repository: "https://charts.helm.sh/stable"
----

*Step 2:* List the Dependencies

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm dependency list ./goweb-app
----

*Step 3:* Run `helm dependencies update` in your chart

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm dependency update ./goweb-app
----

*Step 4:* List the Dependencies

Run the dependency list again and notice any difference.

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm dependency list ./goweb-app
----

*Step 5:* Add `mysql` and `redis` values to the _goweb-app/values.yaml_ in your chart. This will provide some of the values for the charts we are deploying.  For example you can visit the https://github.com/helm/charts/tree/master/stable/mysql[MySQL Chart^] for all the different values available.

[source, yaml, subs="attributes,quotes,verbatim"]
----
mysql:
  mysqlDatabase: employeedb
  mysqlRootPassword: password
  persistence:
    enabled: false

redis:
  usePassword: false
  cluster:
    enabled: false
  master:
    persistence:
      enabled: false
----

*Step 6:* Update _goweb-app/deployment.yaml_ with the following.

[source, yaml, subs="attributes,quotes,verbatim"]
----
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goweb-app
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: goweb-app
    app.kubernetes.io/version: "1.16.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app
      app.kubernetes.io/instance: goweb-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app
        app.kubernetes.io/instance: goweb-app
    spec:
      containers:
        - name: goweb-app
          image: "opstreedevops/ot-go-webapp-master:1.0-15"
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          env:
          - name: DB_URL
            value: goweb-app-mysql
          - name: DB_PORT
            value: "3306"
          - name: DB_USER
            value: "root"
          - name: DB_PASSWORD
            value: password
          - name: REDIS_HOST
            value: "goweb-app-redis-headless"
          - name: REDIS_PORT
            value: "6379"
----

NOTE: Please note that we have provided Redis & MySQL connection details as an environment variables. Also notice that
the application name is hardcoded, `go-webapp`, and we will remedy this later.

*Step 7:* Lint the chart to ensure all is well

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm lint ./goweb-app
----
*Step 8:* Check that the upgrade will process as planned using a dry-run

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm upgrade --dry-run --debug goweb-app ./goweb-app
----

*Step 9:* Upgrade the application

[source, sh, subs="attributes,quotes,verbatim"]
----
$ helm upgrade goweb-app ./goweb-app
----

*Step 10:* Visit the application at http://localhost and enter some fake contact information. This may take a minute, before it runs.

*Step 11:* When you are done trying things out, use `helm uninstall goweb-app` to uninstall the helm application.

image::stop.png[width="20%", height="20%", align="center"]
