== Kubernetes

=== Kubernetes Node Port and Cluster IP

image::https://i0.wp.com/www.docker.com/blog/wp-content/uploads/2019/09/Kubernetes-NodePort-Service-2.png?w=1069&ssl=1[]

[.notes]
--
Overview of how we will be dealing with Kubernetes
. Our traffic will be request from a Node Port or Ingress (we will be using Ingress). (Analogy: Host of the restaurant)
. This will then contact a Kubernetes Service. (Analogy: The table)
. Load Balanced Pods, each pod can service a request. (Analogy: People at a table)
--

=== 3-tier Architecture

image::3-tier.png[]

[.notes]
--
Salesforce uses K8s as a three tier architecture where various clusters represent
* frontend
* backend
* database
--

=== Review of Resources

=== Pod

* Group of one or more containers (such as Docker containers)
* Shared storage/network
* Specification for how to run the containers

=== Service

* Service is an abstraction which defines a logical set of Pods and a policy by which to access them
* Sometimes this pattern is called a micro-service). 
* The set of Pods targeted by a Service is usually determined by a selector

=== Deployment

* Provides declarative updates for Pods and ReplicaSets.
* Describe a desired state in a Deployment
* Deployment Controller changes the actual state to the desired state at a controlled rate. 
* You can define Deployments to create new ReplicaSets,
* Or remove existing Deployments and adopt all their resources with new Deployment

=== ConfigMap

* Bind to your Pods' containers and system components at runtime
** Configuration files
** Command-line arguments
** Environment variables
** Port numbers
** Other configuration artifacts
* Enable you to separate your configurations from your Pods and components, making workloads portable.

=== ServiceAccount

* Service accounts allow pods to communicate to the Kubernetes API. 
* They are bound to specific namespaces, and created automatically by the API server or manually through API calls.
* Service accounts are tied to a set of credentials

[.notes]
--
Be familiar with https://medium.com/better-programming/k8s-tips-using-a-serviceaccount-801c433d0023
--

=== Ingress

* Object defines rules for routing HTTP(S) traffic to applications running in a cluster. 
* An Ingress object is associated with one or more Service objects
* Each Service is associated with a set of Pods

[.notes]
--
This will provide us with the ability to map an HTTP route with a Service within the same cluster
* http://salesforce.com/registration -> Register Service
* http://salesforce.com/about -> About Service
--

=== Kubernetes and Ingress

image::https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/11/20/image1-1.png[]

[.notes]
--
This is a fuller diagram of how we will deploy in this class
* An ingress accepts traffic and routes to a service
* A service in turn will route to the pods
* The pods in turn are distributed in other nodes
--
